{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let JobService = /*#__PURE__*/(() => {\n  class JobService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://cobblestone-place.netlify.app/api/jobs/';\n      this._refresh$ = new Subject();\n    } //Every time with save info this will refresh the page.\n\n\n    get refresh$() {\n      return this._refresh$;\n    }\n\n    getJobs() {\n      return this.http.get(this.url);\n    }\n\n    getJob(_id) {\n      return this.http.get(this.url + _id);\n    }\n\n    deleteJob(_id) {\n      return this.http.delete(this.url + _id);\n    }\n\n    createJob(job) {\n      return this.http.post(this.url, job).pipe(tap(() => {\n        this._refresh$.next();\n      }));\n    }\n\n    updateJob(_id, job) {\n      return this.http.put(this.url + _id, job).pipe(tap(() => {\n        this._refresh$.next();\n      }));\n    }\n\n  }\n\n  JobService.ɵfac = function JobService_Factory(t) {\n    return new (t || JobService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  JobService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JobService,\n    factory: JobService.ɵfac,\n    providedIn: 'root'\n  });\n  return JobService;\n})();","map":null,"metadata":{},"sourceType":"module"}