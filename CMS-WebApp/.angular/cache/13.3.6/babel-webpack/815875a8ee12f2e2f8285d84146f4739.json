{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CMSService = /*#__PURE__*/(() => {\n  class CMSService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'https://cobblestone-place.netlify.app/api/cms/';\n      this._refresh$ = new Subject();\n    } //Every time with save info this will refresh the page.\n\n\n    get refresh$() {\n      return this._refresh$;\n    }\n\n    getCMS() {\n      return this.http.get(this.url);\n    }\n\n    deleteCMS(_id) {\n      return this.http.delete(this.url + _id);\n    } // createCMS(cms: CMSServ): Observable<any> {\n    //   return this.http.post(this.url, cms)\n    //   .pipe(\n    //     tap(() => {\n    //       this._refresh$.next();\n    //     }));\n    // }\n\n\n    updateCMS(_id, cms) {\n      return this.http.put(this.url + _id, cms).pipe(tap(() => {\n        this._refresh$.next();\n      }));\n    }\n\n  }\n\n  CMSService.ɵfac = function CMSService_Factory(t) {\n    return new (t || CMSService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CMSService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CMSService,\n    factory: CMSService.ɵfac,\n    providedIn: 'root'\n  });\n  return CMSService;\n})();","map":null,"metadata":{},"sourceType":"module"}